"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 3.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from django.utils.translation import gettext_lazy as _
from oscar.defaults import *

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    'home',
    # 'search',
    'user',
    'notify_user',

    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.contrib.styleguide',
    'wagtail.contrib.settings',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.core',
    'oscarapi',

    'rosetta',
    'django_countries',

    'modelcluster',
    'taggit',
    'paypal',
    'mailer',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.flatpages',
    'django.contrib.sites',
    'django.contrib.sitemaps',

    'wagtail.contrib.modeladmin',

    # Oscar
    'oscar.config.Shop',
    'oscar.apps.analytics.apps.AnalyticsConfig',
    # 'oscar.apps.checkout.apps.CheckoutConfig',
    'checkout.apps.CheckoutConfig',
    # 'oscar.apps.address.apps.AddressConfig',
    'address.apps.AddressConfig',
    # 'oscar.apps.shipping.apps.ShippingConfig',
    'shipping.apps.ShippingConfig',
    # 'oscar.apps.catalogue.apps.CatalogueConfig',
    'catalogue.apps.CatalogueConfig',
    'oscar.apps.catalogue.reviews.apps.CatalogueReviewsConfig',
    'oscar.apps.communication.apps.CommunicationConfig',
    'oscar.apps.partner.apps.PartnerConfig',
    'oscar.apps.basket.apps.BasketConfig',
    'oscar.apps.payment.apps.PaymentConfig',
    'oscar.apps.offer.apps.OfferConfig',
    # 'oscar.apps.order.apps.OrderConfig',
    'order.apps.OrderConfig',
    # 'oscar.apps.customer.apps.CustomerConfig',
    'customer.apps.CustomerConfig',
    'oscar.apps.search.apps.SearchConfig',
    'oscar.apps.voucher.apps.VoucherConfig',
    'oscar.apps.wishlists.apps.WishlistsConfig',
    # 'oscar.apps.dashboard.apps.DashboardConfig',
    'dashboard.apps.DashboardConfig',
    'oscar.apps.dashboard.reports.apps.ReportsDashboardConfig',
    'oscar.apps.dashboard.users.apps.UsersDashboardConfig',
    'oscar.apps.dashboard.orders.apps.OrdersDashboardConfig',
    # 'oscar.apps.dashboard.catalogue.apps.CatalogueDashboardConfig',
    'dashboard.catalogue.apps.CatalogueDashboardConfig',
    'oscar.apps.dashboard.offers.apps.OffersDashboardConfig',
    'oscar.apps.dashboard.partners.apps.PartnersDashboardConfig',
    'oscar.apps.dashboard.pages.apps.PagesDashboardConfig',
    'oscar.apps.dashboard.ranges.apps.RangesDashboardConfig',
    'oscar.apps.dashboard.reviews.apps.ReviewsDashboardConfig',
    'oscar.apps.dashboard.vouchers.apps.VouchersDashboardConfig',
    'oscar.apps.dashboard.communications.apps.CommunicationsDashboardConfig',
    'oscar.apps.dashboard.shipping.apps.ShippingDashboardConfig',

    # 3rd-party apps that oscar depends on
    'widget_tweaks',
    'haystack',
    'treebeard',
    'sorl.thumbnail',   # Default thumbnail backend, can be replaced
    'django_tables2',
    'cities_light',

    #for cron job
    'django_crontab',
]

SITE_ID = 1

# PAYMENT METHODS
OSCAR_PAYMENT_METHODS = (
    ("paypal", ("Paypal")),
)

MIDDLEWARE = [
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
    'oscar.apps.basket.middleware.BasketMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'oscar.apps.customer.auth_backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
            os.path.join(PROJECT_DIR, "templates", "oscar"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'oscar.apps.search.context_processors.search_form',
                'oscar.apps.checkout.context_processors.checkout',
                'oscar.apps.communication.notifications.context_processors.notifications',
                'oscar.core.context_processors.metadata',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'CET'

USE_I18N = True

USE_L10N = True

USE_TZ = True

def gettext_noop(s): return s
LANGUAGES = (
    ('en', gettext_noop('English')),
    ('it', gettext_noop('Italian')),
    ('de', gettext_noop('German')),
    ('fr', gettext_noop('French')),
    ('es', gettext_noop('Spanish')),
)

ROSETTA_LANGUAGES = (
    ('en', gettext_noop('English')),
    ('it', gettext_noop('Italian')),
    ('de', gettext_noop('German')),
    ('fr', gettext_noop('French')),
    ('es', gettext_noop('Spanish')),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# ManifestStaticFilesStorage is recommended in production, to prevent outdated
# JavaScript / CSS assets being served from cache (e.g. after a Wagtail upgrade).
# See https://docs.djangoproject.com/en/3.2/ref/contrib/staticfiles/#manifeststaticfilesstorage
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey'
EMAIL_HOST_PASSWORD = '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'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

MAIL_PORT = 587
EMAIL_SENDER = "MIR <noreply@spirometry.com>"
DEFAULT_FROM_EMAIL = "MIR <noreply@spirometry.com>"
SERVER_EMAIL = DEFAULT_FROM_EMAIL

# Wagtail settings

WAGTAIL_SITE_NAME = "project"
WAGTAIL_FRONTEND_LOGIN_URL = "/shop/accounts/login/"
LOGIN_REDIRECT_URL = "/shop/accounts/profile/"
LOGIN_URL = WAGTAIL_FRONTEND_LOGIN_URL

# Search
# https://docs.wagtail.io/en/stable/topics/search/backends.html
WAGTAILSEARCH_BACKENDS = {
    'default': {
        'BACKEND': 'wagtail.search.backends.database',
    }
}

# Base URL to use when referring to full URLs within the Wagtail admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash
BASE_URL = 'https://mirsmartone.com'

AUTH_USER_MODEL = 'user.User'

WAGTAIL_ENABLE_UPDATE_CHECK = False
WAGTAIL_ALLOW_UNICODE_SLUGS = False
WAGTAILADMIN_COMMENTS_ENABLED = False
EMAIL_SENDER = "MIR Smartone <noreply@mirsmartone.com>"
DEFAULT_FROM_EMAIL = "MIR Smartone <noreply@mirsmartone.com>"
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

WAGTAILDOCS_SERVE_METHOD='direct'
OSCAR_SHOP_NAME = "Mir Smartone"
OSCAR_FROM_EMAIL = "MIR Smartone <noreply@mirsmartone.com>"
OSCAR_DEFAULT_CURRENCY = "EUR"
OSCAR_HIDDEN_FEATURES = ['reviews','wishlists']
OSCAR_HOMEPAGE = "/"

OSCAR_DASHBOARD_NAVIGATION += [
    {
        "label": "CMS",
        "icon": "fas fa-cube",
        "url_name": "wagtailadmin_home",
        "access_fn": lambda user, url_name, url_args, url_kwargs: user.is_staff,
    },
    {
        "label": "Carrelli Abbandonati",
        "icon": "fas fa-envelope",
        "url_name": "abandoned-history",
        "access_fn": lambda user, url_name, url_args, url_kwargs: user.is_staff,
    }
]

COUNTRIES_OVERRIDE = {
    "XK": {"name": _("Kosovo"), "ioc_code": "KOS"},
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

OSCAR_REQUIRED_ADDRESS_FIELDS = (
    "first_name",
    "last_name",
    "line1",
    "line4", # City
    "state",
    "postcode",
    "country",
    "phone_number",
)

CITIES_LIGHT_TRANSLATION_LANGUAGES = ['en', 'it', 'fr', 'de', 'es']
CITIES_LIGHT_INCLUDE_COUNTRIES = ['AT', 'BE', 'BG', 'HR', 'CZ', 'DK', 'EE', 'FI', 'DE', 'GR', 'HU', 'IE', 'IT', 'LV', 'LT', 'LU', 'NL', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE']
CITIES_LIGHT_INCLUDE_CITY_TYPES = ['PPL', 'PPLA', 'PPLA2', 'PPLA3', 'PPLA4', 'PPLC', 'PPLF', 'PPLG', 'PPLL', 'PPLR', 'PPLS', 'STLMT',]
CITIES_LIGHT_TRANSLATION_SOURCES = []
CITIES_LIGHT_SUBREGION_SOURCES = []
CITIES_LIGHT_CITY_SOURCES = ['http://download.geonames.org/export/dump/cities500.zip']

EXCLUDED_REGIONS = ['Azores', 'Canary Islands', 'Madeira', 'Ceuta', 'Melilla']
EMAIL_BACKEND = "mailer.backend.DbBackend"

CRONJOBS = [
    ('*/5 * * * *', 'notify_user.cron.get_abandoned_cart'),
]

# public recaptcha: 6Ld-MgAiAAAAAFll4DjMvw4AV4RvFmx2xy1HIw_U
GOOGLE_RECAPTCHA_SECRET_KEY = '6Ld-MgAiAAAAAGpI4xrR7zoH2ynSK94o6o7T4ktl'

MAILCHIMP_API_KEY = 'e54b9d8c6ee78c9d88b0f31c468a18c6-us13'
MAILCHIMP_EMAIL_LIST_ID = 'db536200d8'
MAILCHIMP_DATA_CENTER = 'us13'